// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250227111943_EngineTaskDb")]
    partial class EngineTaskDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Entities.EngineTask", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("command")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("command");

                    b.Property<int?>("exitcode")
                        .HasColumnType("integer")
                        .HasColumnName("exit_code");

                    b.Property<DateTime?>("finished_at")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("finished_at");

                    b.Property<DateTime?>("started_at")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("started_at");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("stderr")
                        .HasColumnType("text")
                        .HasColumnName("stderr");

                    b.Property<string>("stdout")
                        .HasColumnType("text")
                        .HasColumnName("stdout");

                    b.HasKey("id");

                    b.ToTable("tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
